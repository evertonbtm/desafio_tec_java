{
	"info": {
		"_postman_id": "0ddba3db-8422-443d-ac5d-c0e282122157",
		"name": "Crud API",
		"description": "Collection for testing Transaction API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "43700619"
	},
	"item": [
		{
			"name": "Create or Update User 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should contain user document\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"document\");\r",
							"});\r",
							"\r",
							"pm.test(\"User email is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.eql(\"user1@teste.com\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"user1\",\n  \"password\": \"user123!@#\",\n  \"email\": \"user1@teste.com\",\n  \"document\": \"94071312033\",\n  \"moneyBalance\": 1000\n}"
				},
				"url": "http://localhost:8080/users/create-update"
			},
			"response": []
		},
		{
			"name": "Create or Update User 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should contain user document\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"document\");\r",
							"});\r",
							"\r",
							"pm.test(\"User email is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.eql(\"user2@teste.com\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"user2\",\n  \"password\": \"user123!@#\",\n  \"email\": \"user2@teste.com\",\n  \"document\": \"94071312030\",\n  \"moneyBalance\": 1000\n}"
				},
				"url": "http://localhost:8080/users/create-update"
			},
			"response": []
		},
		{
			"name": "Search Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should contain pageable\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"pageable\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/users/search"
			},
			"response": []
		},
		{
			"name": "Create Transaction",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"value\": 10,\n  \"payee\": \"user1@teste.com\",\n  \"payer\": \"user2@teste.com\"\n}"
				},
				"url": "http://localhost:8080/transactions/send"
			},
			"response": []
		},
		{
			"name": "Create Transaction with Invalid Value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"   pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should contain errors\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"errors\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.errors.value).to.eql(\"Negative or zero values are not allowed\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"value\": -1,\n  \"payee\": \"user1\",\n  \"payer\": \"user2\"\n}"
				},
				"url": "http://localhost:8080/transactions/send"
			},
			"response": []
		},
		{
			"name": "Create Transaction with Null Value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"   pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should contain errors\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"errors\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.errors.value).to.eql(\"The value cannot be null\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"value\": null,\n  \"payee\": \"user1\",\n  \"payer\": \"user2\"\n}"
				},
				"url": "http://localhost:8080/transactions/send"
			},
			"response": []
		},
		{
			"name": "Delete User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should contain status\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"status\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(\"Success\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users?param=94071312033",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					],
					"query": [
						{
							"key": "param",
							"value": "94071312033"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should contain status\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"status\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(\"Success\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users?param=94071312030",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					],
					"query": [
						{
							"key": "param",
							"value": "94071312030"
						}
					]
				}
			},
			"response": []
		}
	]
}