plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'br.com.batista.desafio01'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'


	implementation 'jakarta.validation:jakarta.validation-api:3.0.0'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'org.flywaydb:flyway-database-postgresql'
	runtimeOnly 'org.postgresql:postgresql'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'

	testImplementation("com.h2database:h2")
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
	testImplementation 'org.mockito:mockito-core:5.7.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
